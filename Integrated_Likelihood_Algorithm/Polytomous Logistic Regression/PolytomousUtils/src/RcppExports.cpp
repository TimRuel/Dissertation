// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// log_likelihood_rcpp
double log_likelihood_rcpp(NumericVector Beta, NumericMatrix X_one_hot, NumericMatrix Y_one_hot, int Jm1, int p, int n);
RcppExport SEXP _PolytomousUtils_log_likelihood_rcpp(SEXP BetaSEXP, SEXP X_one_hotSEXP, SEXP Y_one_hotSEXP, SEXP Jm1SEXP, SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_one_hot(X_one_hotSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_one_hot(Y_one_hotSEXP);
    Rcpp::traits::input_parameter< int >::type Jm1(Jm1SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(log_likelihood_rcpp(Beta, X_one_hot, Y_one_hot, Jm1, p, n));
    return rcpp_result_gen;
END_RCPP
}
// softmax_adj_vector_rcpp
NumericVector softmax_adj_vector_rcpp(NumericVector x);
RcppExport SEXP _PolytomousUtils_softmax_adj_vector_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax_adj_vector_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// softmax_adj_matrix_rcpp
NumericMatrix softmax_adj_matrix_rcpp(NumericMatrix x);
RcppExport SEXP _PolytomousUtils_softmax_adj_matrix_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax_adj_matrix_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// softmax_vector_rcpp
NumericVector softmax_vector_rcpp(NumericVector x);
RcppExport SEXP _PolytomousUtils_softmax_vector_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax_vector_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// softmax_matrix_rcpp
NumericMatrix softmax_matrix_rcpp(NumericMatrix x);
RcppExport SEXP _PolytomousUtils_softmax_matrix_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(softmax_matrix_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// entropy_rcpp
double entropy_rcpp(NumericVector p);
RcppExport SEXP _PolytomousUtils_entropy_rcpp(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(entropy_rcpp(p));
    return rcpp_result_gen;
END_RCPP
}
// PoI_fn_rcpp
double PoI_fn_rcpp(NumericMatrix Beta, NumericVector X_h_one_hot);
RcppExport SEXP _PolytomousUtils_PoI_fn_rcpp(SEXP BetaSEXP, SEXP X_h_one_hotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X_h_one_hot(X_h_one_hotSEXP);
    rcpp_result_gen = Rcpp::wrap(PoI_fn_rcpp(Beta, X_h_one_hot));
    return rcpp_result_gen;
END_RCPP
}
// Beta_hat_obj_fn_rcpp
double Beta_hat_obj_fn_rcpp(NumericVector Beta, NumericMatrix X_one_hot, NumericMatrix omega_hat, double lambda, int Jm1, int p, int n);
RcppExport SEXP _PolytomousUtils_Beta_hat_obj_fn_rcpp(SEXP BetaSEXP, SEXP X_one_hotSEXP, SEXP omega_hatSEXP, SEXP lambdaSEXP, SEXP Jm1SEXP, SEXP pSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_one_hot(X_one_hotSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type omega_hat(omega_hatSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type Jm1(Jm1SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(Beta_hat_obj_fn_rcpp(Beta, X_one_hot, omega_hat, lambda, Jm1, p, n));
    return rcpp_result_gen;
END_RCPP
}
// Beta_hat_con_fn_rcpp
double Beta_hat_con_fn_rcpp(NumericVector Beta, NumericVector X_h_one_hot, double psi, int Jm1, int p);
RcppExport SEXP _PolytomousUtils_Beta_hat_con_fn_rcpp(SEXP BetaSEXP, SEXP X_h_one_hotSEXP, SEXP psiSEXP, SEXP Jm1SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X_h_one_hot(X_h_one_hotSEXP);
    Rcpp::traits::input_parameter< double >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< int >::type Jm1(Jm1SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Beta_hat_con_fn_rcpp(Beta, X_h_one_hot, psi, Jm1, p));
    return rcpp_result_gen;
END_RCPP
}
// omega_hat_obj_fn_rcpp
double omega_hat_obj_fn_rcpp(NumericVector Beta, NumericVector X_h_one_hot, int Jm1, int p, double psi_hat);
RcppExport SEXP _PolytomousUtils_omega_hat_obj_fn_rcpp(SEXP BetaSEXP, SEXP X_h_one_hotSEXP, SEXP Jm1SEXP, SEXP pSEXP, SEXP psi_hatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type X_h_one_hot(X_h_one_hotSEXP);
    Rcpp::traits::input_parameter< int >::type Jm1(Jm1SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type psi_hat(psi_hatSEXP);
    rcpp_result_gen = Rcpp::wrap(omega_hat_obj_fn_rcpp(Beta, X_h_one_hot, Jm1, p, psi_hat));
    return rcpp_result_gen;
END_RCPP
}
// omega_hat_con_fn_rcpp
double omega_hat_con_fn_rcpp(NumericVector Beta, NumericMatrix X_one_hot, NumericMatrix Y_one_hot, int Jm1, int p, int n, double threshold);
RcppExport SEXP _PolytomousUtils_omega_hat_con_fn_rcpp(SEXP BetaSEXP, SEXP X_one_hotSEXP, SEXP Y_one_hotSEXP, SEXP Jm1SEXP, SEXP pSEXP, SEXP nSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Beta(BetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_one_hot(X_one_hotSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_one_hot(Y_one_hotSEXP);
    Rcpp::traits::input_parameter< int >::type Jm1(Jm1SEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(omega_hat_con_fn_rcpp(Beta, X_one_hot, Y_one_hot, Jm1, p, n, threshold));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PolytomousUtils_log_likelihood_rcpp", (DL_FUNC) &_PolytomousUtils_log_likelihood_rcpp, 6},
    {"_PolytomousUtils_softmax_adj_vector_rcpp", (DL_FUNC) &_PolytomousUtils_softmax_adj_vector_rcpp, 1},
    {"_PolytomousUtils_softmax_adj_matrix_rcpp", (DL_FUNC) &_PolytomousUtils_softmax_adj_matrix_rcpp, 1},
    {"_PolytomousUtils_softmax_vector_rcpp", (DL_FUNC) &_PolytomousUtils_softmax_vector_rcpp, 1},
    {"_PolytomousUtils_softmax_matrix_rcpp", (DL_FUNC) &_PolytomousUtils_softmax_matrix_rcpp, 1},
    {"_PolytomousUtils_entropy_rcpp", (DL_FUNC) &_PolytomousUtils_entropy_rcpp, 1},
    {"_PolytomousUtils_PoI_fn_rcpp", (DL_FUNC) &_PolytomousUtils_PoI_fn_rcpp, 2},
    {"_PolytomousUtils_Beta_hat_obj_fn_rcpp", (DL_FUNC) &_PolytomousUtils_Beta_hat_obj_fn_rcpp, 7},
    {"_PolytomousUtils_Beta_hat_con_fn_rcpp", (DL_FUNC) &_PolytomousUtils_Beta_hat_con_fn_rcpp, 5},
    {"_PolytomousUtils_omega_hat_obj_fn_rcpp", (DL_FUNC) &_PolytomousUtils_omega_hat_obj_fn_rcpp, 5},
    {"_PolytomousUtils_omega_hat_con_fn_rcpp", (DL_FUNC) &_PolytomousUtils_omega_hat_con_fn_rcpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_PolytomousUtils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
