// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// iterate_over
NumericMatrix iterate_over(NumericVector iteration_values, NumericVector initial_guess, Function custom_function, List args, bool fill_bottom_to_top);
RcppExport SEXP _iterate_iterate_over(SEXP iteration_valuesSEXP, SEXP initial_guessSEXP, SEXP custom_functionSEXP, SEXP argsSEXP, SEXP fill_bottom_to_topSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type iteration_values(iteration_valuesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initial_guess(initial_guessSEXP);
    Rcpp::traits::input_parameter< Function >::type custom_function(custom_functionSEXP);
    Rcpp::traits::input_parameter< List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< bool >::type fill_bottom_to_top(fill_bottom_to_topSEXP);
    rcpp_result_gen = Rcpp::wrap(iterate_over(iteration_values, initial_guess, custom_function, args, fill_bottom_to_top));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _iterate_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_iterate_iterate_over", (DL_FUNC) &_iterate_iterate_over, 5},
    {"_iterate_rcpp_hello_world", (DL_FUNC) &_iterate_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_iterate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
